package ICLCompiler;
/* Generated By:JavaCC: Do not edit this line. Parser01Constants.java */

/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface Parser01Constants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int Num = 4;
  /** RegularExpression Id. */
  int DEF = 5;
  /** RegularExpression Id. */
  int IN = 6;
  /** RegularExpression Id. */
  int END = 7;
  /** RegularExpression Id. */
  int TRUE = 8;
  /** RegularExpression Id. */
  int FALSE = 9;
  /** RegularExpression Id. */
  int EQUALS = 10;
  /** RegularExpression Id. */
  int HIGHEREQUALS = 11;
  /** RegularExpression Id. */
  int HIGHER = 12;
  /** RegularExpression Id. */
  int SMALLEREQUALS = 13;
  /** RegularExpression Id. */
  int OR = 14;
  /** RegularExpression Id. */
  int AND = 15;
  /** RegularExpression Id. */
  int NEG = 16;
  /** RegularExpression Id. */
  int SMALLER = 17;
  /** RegularExpression Id. */
  int PLUS = 18;
  /** RegularExpression Id. */
  int MINUS = 19;
  /** RegularExpression Id. */
  int SEMICOON = 20;
  /** RegularExpression Id. */
  int DOUBSEMICOLON = 21;
  /** RegularExpression Id. */
  int MUL = 22;
  /** RegularExpression Id. */
  int DIV = 23;
  /** RegularExpression Id. */
  int LPAR = 24;
  /** RegularExpression Id. */
  int RPAR = 25;
  /** RegularExpression Id. */
  int ID = 26;
  /** RegularExpression Id. */
  int EQUAL = 27;
  /** RegularExpression Id. */
  int EL = 28;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "<Num>",
    "\"def\"",
    "\"in\"",
    "\"end\"",
    "\"true\"",
    "\"false\"",
    "\"==\"",
    "\">=\"",
    "\">\"",
    "\"<=\"",
    "\"||\"",
    "\"&&\"",
    "\"~\"",
    "\"<\"",
    "\"+\"",
    "\"-\"",
    "\";\"",
    "\";;\"",
    "\"*\"",
    "\"/\"",
    "\"(\"",
    "\")\"",
    "<ID>",
    "\"=\"",
    "\"\\n\"",
  };

}
